{"version":3,"sources":["components/PrivateRoute.js","apis/helpers.js","constants/productConstants.js","constants/cartConstants.js","actions/cartActions.js","components/Spinner.js","components/Message.js","utils/toast.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductDetailsScreen.js","components/Counter.js","screens/CartScreen.js","constants/userConstants.js","components/Header.js","actions/userActions.js","screens/RegisterScreen.js","screens/LoginScreen.js","constants/orderConstants.js","actions/orderAction.js","screens/CheckoutScreen.js","screens/OrderDetailsScreen.js","screens/OrderListScreen.js","App.js","reducers/index.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","store.js","index.js"],"names":["PrivateRoute","Component","component","rest","currentUser","useSelector","state","userLogin","render","props","to","pathname","from","location","apiHelper","axios","create","baseURL","process","PRODUCT_FETCH_REQUEST","PRODUCT_FETCH_SUCCESS","PRODUCT_FETCH_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_ACTION_RESET","CART_ITEMS_RESET","addToCart","item","dispatch","getState","type","payload","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","itemId","Spinner","className","Message","children","dismiss","role","data-bs-dismiss","aria-label","Toast","Swal","mixin","toast","position","showConfirmButton","timer","HomeScreen","console","log","useDispatch","products","loading","error","actionSuccess","useEffect","a","get","data","message","response","fire","icon","title","showArrows","autoPlay","showThumbs","showStatus","infiniteLoop","interval","stopOnHover","map","p","id","src","image","alt","name","product","price","onClick","find","i","parse","quantity","onCartClickHandler","ProductDetailsScreen","productId","match","params","productDetails","useState","count","setCount","fetchProductDetails","increment","decrement","onChangeHandler","e","test","target","value","Number","isExistInCart","Brand","description","onChange","Counter","qty","CartScreen","onDeleteCartItemHandler","showDenyButton","denyButtonText","confirmButtonText","isConfirmed","length","subtotal","reduce","c","itemCount","renderCartScreen","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","Header","itemsCount","hamburger","setHamburger","logoutHandler","removeItem","Dropdown","data-bs-toggle","aria-expanded","aria-labelledby","checked","htmlFor","renderInput","input","meta","labelContent","placeholder","selector","autoComplete","touched","renderError","reduxForm","form","validate","email","password","confirmPassword","errors","userRegister","success","history","replace","err","onSubmit","handleSubmit","formData","phone","post","Field","login","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_FETCH_REQUEST","ORDER_FETCH_SUCCESS","ORDER_FETCH_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_DELETE_RESET","fetchOrders","headers","authorization","token","deleteOrder","orderId","delete","CheckoutScreen","recipient","setRecipient","setPhone","address","setAddress","deliveryMethod","setDeliveryMethod","paymentMethod","setPaymentMethod","setErrors","setTouched","prevErrors","createOrder","order","apiError","push","Object","keys","renderApiError","preventDefault","onBlur","rows","disabled","style","display","OrderDetailsScreen","orderDetails","fetchOrderDetails","local_paid_at","orderContent","paid_at","Date","offset","toISOString","slice","split","join","OrderItems","payment_method","payment_status","delivery_fee","total","tradeInfo","method","action","PayGateWay","MerchantID","TradeInfo","TradeSha","Version","Product","delivery_method","delivery_status","delivered_at","OrderListScreen","orders","deleteOrderLoading","deleteOrderSuccess","deleteOrderError","deleteOrderHandler","o","createdAt","sn","App","path","exact","RegisterScreen","LoginScreen","reducers","combineReducers","formReducer","addedItem","deletedItemId","filter","initialState","getItem","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.0e79af5f.chunk.js","sourcesContent":["import { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const currentUser = useSelector(state => state.userLogin.currentUser)\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import axios from 'axios'\n\nconst baseURL = process.env.REACT_APP_BASE_URL\n\nexport const apiHelper = axios.create({\n  baseURL\n})","export const PRODUCT_FETCH_REQUEST = 'PRODUCT_FETCH_REQUEST'\nexport const PRODUCT_FETCH_SUCCESS = 'PRODUCT_FETCH_SUCCESS'\nexport const PRODUCT_FETCH_FAIL = 'PRODUCT_FETCH_FAIL'\nexport const PRODUCT_FETCH_RESET = 'PRODUCT_FETCH_RESET'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_ACTION_RESET = ' CART_ACTION_RESET'\nexport const CART_ITEMS_RESET = ' CART_ITEMS_RESET'","import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\n\nexport const addToCart = (item) => {\n  return (dispatch, getState) => {\n    dispatch({ type: CART_ADD_ITEM, payload: item })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n  }\n}\n\nexport const removeFromCart = (itemId) => {\n  return (dispatch, getState) => {\n    dispatch({ type: CART_REMOVE_ITEM, payload: itemId })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n  }\n}","export default function Spinner() {\n  return (\n    <div className=\"spinner\">\n      <div className=\"bouncing-loader\">\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  )\n}\n","export default function Message({ children, type, dismiss }) {\n  if (dismiss) {\n    return (\n      <div className=\"message container\">\n        <div className={`alert alert-${type} alert-dismissible fade show`} role=\"alert\">\n          {children}\n          <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className={`alert alert-${type}`} role=\"alert\">\n        {children}\n      </div >\n    )\n  }\n}\n","import Swal from 'sweetalert2'\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: 'top-end',\n  showConfirmButton: false,\n  timer: 3000\n})\n\nexport default Toast","import { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Carousel } from 'react-responsive-carousel'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\n\nimport { fetchProducts } from '../actions/productActions'\nimport { addToCart } from '../actions/cartActions'\nimport { CART_ACTION_RESET } from '../constants/cartConstants'\nimport Spinner from '../components/Spinner'\nimport Message from '../components/Message'\nimport Toast from '../utils/toast'\n\nconst HomeScreen = (props) => {\n  console.log('HomeScreen render')\n  const dispatch = useDispatch()\n\n  const { loading, error, products } = useSelector(state => state.products)\n  const { cartItems, actionSuccess } = useSelector(state => state.cart)\n\n  useEffect(() => {\n    dispatch(fetchProducts())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (actionSuccess) {\n      dispatch({ type: CART_ACTION_RESET })\n      Toast.fire({\n        icon: 'success',\n        title: '成功加入購物車中'\n      })\n    }\n  }, [dispatch, actionSuccess])\n\n  const onCartClickHandler = (product) => {\n    const isExistInCart = cartItems.find(i => i.id === product.id)\n    if (isExistInCart) {\n      Toast.fire({\n        icon: 'info',\n        title: '此商品已存在於購物車中'\n      })\n    } else {\n      const item = JSON.parse(JSON.stringify(product))\n      item.quantity = 1\n      dispatch(addToCart(item))\n    }\n  }\n\n  const renderHomeScreen = () => {\n    if (loading) return <Spinner />\n    if (error) return <Message type=\"danger\">{error}</Message>\n    if (products) return (\n      <>\n        <section className=\"banner\">\n          <div className=\"container\">\n            {\n              <Carousel showArrows autoPlay showThumbs={false} showStatus={false} infiniteLoop interval=\"2000\" stopOnHover>\n                {products.map(p => (\n                  <div key={p.id}>\n                    <Link to={`/products/${p.id}`} className=\"banner-link\">\n                      <img src={p.image} alt={p.name} className=\"banner-img\" />\n                      <p className=\"legend\">{p.name}</p>\n                    </Link>\n                  </div>\n                ))}\n              </Carousel>\n            }\n          </div>\n        </section>\n        <section id=\"product-list\">\n          <div className=\"container\">\n            <div className=\"product-list-wrapper\">\n              {products.map(product => (\n                <div key={product.id} className=\"card\">\n                  <Link to={`/products/${product.id}`} className=\"card-img-wrapper\">\n                    <img src={product.image} alt={product.name} className=\"card-img\" />\n                    <span className=\"card-img-title\">{product.name}</span>\n                  </Link>\n                  <div className=\"card-product-info-wrapper\">\n                    <Link to={`/products/${product.id}`} className=\"card-product-title\">{product.name}</Link>\n                    <div className=\"card-product-price-row\">\n                      <span className=\"price\">$ {product.price}</span>\n                      <i\n                        className=\"fas fa-cart-plus cart\"\n                        onClick={() => { onCartClickHandler(product) }}\n                      ></i>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </section>\n      </>\n    )\n  }\n  return (\n    <>\n      {renderHomeScreen()}\n    </>\n  )\n}\n\nexport default HomeScreen","import { apiHelper } from '../apis/helpers'\nimport {\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_FETCH_FAIL,\n  PRODUCT_FETCH_REQUEST,\n  PRODUCT_FETCH_SUCCESS\n} from '../constants/productConstants'\n\n//for productsReducer\nexport const fetchProducts = () => {\n  return async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_FETCH_REQUEST })\n    try {\n      const { data } = await apiHelper.get('/api/products')\n      dispatch({ type: PRODUCT_FETCH_SUCCESS, payload: data })\n    } catch (err) {\n      const message = err.response && err.response.data.message ? err.response.data.message : err.message\n      dispatch({ type: PRODUCT_FETCH_FAIL, payload: message })\n    }\n  }\n}\n\n//for productDetailsReducer\nexport const fetchProductDetails = (productId) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n    try {\n      const { data } = await apiHelper.get(`/api/products/${productId}`)\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n    } catch (err) {\n      const message = err.response && err.response.data.message ? err.response.data.message : err.message\n      dispatch({ type: PRODUCT_DETAILS_FAIL, payload: message })\n    }\n  }\n}","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { addToCart } from '../actions/cartActions'\nimport { fetchProductDetails } from '../actions/productActions'\nimport Spinner from '../components/Spinner'\nimport Message from '../components/Message'\nimport Toast from '../utils/toast'\nimport { CART_ACTION_RESET } from '../constants/cartConstants'\n\nexport default function ProductDetailsScreen(props) {\n  console.log('ProductDetailsScreen render')\n  const productId = props.match.params.id\n  const { loading, error, product } = useSelector(state => state.productDetails)\n  const { cartItems, actionSuccess } = useSelector(state => state.cart)\n  const [count, setCount] = useState(1)\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchProductDetails(productId))\n  }, [dispatch, productId])\n\n  useEffect(() => {\n    if (actionSuccess) {\n      dispatch({ type: CART_ACTION_RESET })\n      Toast.fire({\n        icon: 'success',\n        title: `成功加入購物車`\n      })\n    }\n  }, [dispatch, actionSuccess])\n\n\n  const increment = () => setCount(count + 1)\n  const decrement = () => {\n    if (count <= 1) return\n    setCount(count - 1)\n  }\n  const onChangeHandler = (e) => {\n    // ^[1-9]\\d*$ is regExp of positive integer. Ex. 1, 2, ...\n    if (/^[1-9]\\d*$/.test(e.target.value)) {\n      setCount(Number(e.target.value))\n    } else {\n      setCount('')\n    }\n  }\n  const onCartClickHandler = () => {\n    let quantity = 1\n    if (count !== '') {\n      quantity = count\n    }\n    const isExistInCart = cartItems.find(i => i.id === product.id)\n    const item = JSON.parse(JSON.stringify(product))\n    item.quantity = isExistInCart ? (isExistInCart.quantity + quantity) : quantity\n    dispatch(addToCart(item))\n    setCount(1)\n  }\n\n  const renderProductDetails = () => {\n    if (loading) {\n      return <Spinner />\n    } else if (error) {\n      return <Message type=\"danger\">{error}</Message>\n    } else {\n      return (\n        <>\n          <section id=\"product-details\">\n            <div className=\"container\">\n              <Link to=\"/\" className=\"nav-back-link\">回到首頁</Link>\n              <div className=\"product-details-wrapper\">\n                <div className=\"product-img-wrapper\">\n                  <img src={product.image} alt={product.name} className=\"product-img\" />\n                </div>\n                <div className=\"product-info-wrapper\">\n                  <span className=\"product-brand\">{product.Brand.name}</span>\n                  <h4 className=\"product-title\">{product.name}</h4>\n                  <p className=\"product-description\">{product.description}</p>\n                </div>\n                <div className=\"product-summary-wrapper\">\n                  <span className=\"product-price\">$ {product.price}</span>\n                  <div className=\"product-action\">\n                    <div className=\"counter product-details-counter\">\n                      <span>數量</span>\n                      <i className=\"fas fa-minus minus\" onClick={decrement}></i>\n                      <input\n                        type=\"text\"\n                        value={count}\n                        className=\"qty\"\n                        onChange={onChangeHandler}\n                      />\n                      <i className=\"fas fa-plus plus\" onClick={increment}></i>\n                    </div>\n                    <button onClick={onCartClickHandler} className=\"add-to-cart-btn btn default-btn\">加入購物車</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </>\n      )\n    }\n  }\n  return renderProductDetails()\n}","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addToCart } from '../actions/cartActions'\nimport { CART_ACTION_RESET } from '../constants/cartConstants'\n\nconst Counter = ({ qty, item }) => {\n  console.log('Counter Render')\n\n  const [count, setCount] = useState(qty)\n\n  const dispatch = useDispatch()\n  const increment = () => {\n    setCount(count + 1)\n    item.quantity = count + 1\n    dispatch(addToCart(item))\n    dispatch({ type: CART_ACTION_RESET })\n  }\n  const decrement = () => {\n    if (count <= 1) return\n    setCount(count - 1)\n    item.quantity = count - 1\n    dispatch(addToCart(item))\n    dispatch({ type: CART_ACTION_RESET })\n  }\n  const onChangeHandler = (e) => {\n    // ^[1-9]\\d*$ is regExp of positive integer. Ex. 1, 2, ...\n    if (/^[1-9]\\d*$/.test(e.target.value)) {\n      setCount(Number(e.target.value))\n      item.quantity = Number(e.target.value)\n      dispatch(addToCart(item))\n      dispatch({ type: CART_ACTION_RESET })\n\n    } else {\n      setCount('')\n      item.quantity = 1\n      dispatch(addToCart(item))\n      dispatch({ type: CART_ACTION_RESET })\n    }\n  }\n\n  return (\n    <div className=\"counter\">\n      <i className=\"fas fa-minus minus\" onClick={decrement}></i>\n      <input\n        type=\"text\"\n        value={count}\n        className=\"qty\"\n        onChange={onChangeHandler}\n      />\n      <i className=\"fas fa-plus plus\" onClick={increment}></i>\n    </div>\n  )\n}\n\nexport default Counter","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Swal from 'sweetalert2'\n\nimport Toast from '../utils/toast'\nimport Counter from '../components/Counter'\nimport { removeFromCart } from '../actions/cartActions'\nimport { CART_ACTION_RESET } from '../constants/cartConstants'\nimport Message from '../components/Message'\n\nconst CartScreen = (props) => {\n  console.log('CartScreen render')\n  const { cartItems, actionSuccess } = useSelector(state => state.cart)\n  const dispatch = useDispatch()\n  const onDeleteCartItemHandler = async (itemId) => {\n    const result = await Swal.fire({\n      title: '確認刪除此商品?',\n      showDenyButton: true,\n      showConfirmButton: true,\n      denyButtonText: '取消',\n      confirmButtonText: '刪除'\n    })\n    if (result.isConfirmed) {\n      dispatch(removeFromCart(itemId))\n    }\n  }\n\n  useEffect(() => {\n    if (actionSuccess) {\n      dispatch({ type: CART_ACTION_RESET })\n      Toast.fire({\n        title: '成功刪除',\n        icon: 'success'\n      })\n    }\n  }, [dispatch, actionSuccess])\n\n\n\n  const renderCartScreen = () => {\n    if (!cartItems.length) {\n      return (\n        <Message type=\"info\" dismiss={false}>購物車內沒有商品 <Link to=\"/\">去選購</Link></Message>\n      )\n    }\n    const subtotal = cartItems.reduce((a, c) => a + c.price * c.quantity, 0)\n    const itemCount = cartItems.reduce((a, c) => a + c.quantity, 0)\n    return (\n      <section id=\"cart\">\n        <div className=\"container-lg\">\n          <Link\n            to={{\n              pathname: props.location.state ? props.location.state.from.pathname : '/'\n            }}\n            className=\"nav-back-link\"\n          >回到上一頁</Link>\n          <div className=\"cart-list-wrapper\">\n            <div className=\"cart-header\">\n              <span className=\"cart-img\"></span>\n              <span className=\"cart-title\">商品</span>\n              <span className=\"cart-price\">單價</span>\n              <span className=\"cart-counter\">數量</span>\n              <span className=\"cart-subtotal\">總計</span>\n              <span className=\"cart-action\">操作</span>\n            </div>\n            {\n              cartItems.map(i => (\n                <div key={i.id} className=\"cart-item\">\n                  <img\n                    className=\"cart-item-img\"\n                    src={i.image}\n                    alt={i.name}\n                  />\n                  <Link\n                    className=\"cart-item-title\"\n                    to={`/products/${i.id}`}\n                  >{i.name}</Link>\n                  <span className=\"cart-item-price\">${i.price}</span>\n                  <Counter item={i} qty={i.quantity} />\n                  <span className=\"cart-item-subtotal\">${i.price * i.quantity}</span>\n                  <div className=\"cart-item-action\">\n                    <button\n                      className=\"cart-item-delete-btn btn-link btn\"\n                      onClick={() => onDeleteCartItemHandler(i.id)}\n                    >刪除</button>\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n          <div className=\"order-placement\">\n            <div className=\"cart-summary-subtotal\">\n              <span>總金額({itemCount}項商品):</span>\n              <span className=\"subtotal-price\">${subtotal}</span>\n            </div>\n            <Link to=\"/checkout\" className=\"place-order-link\">\n              <button className=\"place-order-btn\">去買單</button>\n            </Link>\n          </div>\n        </div>\n      </section>\n    )\n  }\n\n  return (\n    <>\n      {renderCartScreen()}\n    </>\n  )\n}\n\nexport default CartScreen","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET'","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { logout } from '../actions/userActions'\n\nconst Header = (props) => {\n  console.log('Header render')\n  const cartItems = useSelector(state => state.cart.cartItems)\n  const itemsCount = cartItems.reduce((a, c) => a + c.quantity, 0)\n  const currentUser = useSelector(state => state.userLogin.currentUser)\n\n  const [hamburger, setHamburger] = useState(false)\n\n  const dispatch = useDispatch()\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  const Dropdown = () => {\n    return (\n      <div className=\"dropdown\">\n        <button className=\"btn btn-link dropdown-toggle nav-link\" type=\"button\" id=\"user-dropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n          Hi, {currentUser.name}\n        </button>\n        <ul className=\"dropdown-menu\" aria-labelledby=\"user-dropdown\">\n          <li><Link className=\"nav-link\" to=\"/orders\" onClick={() => setHamburger(!hamburger)}>訂單</Link></li>\n          <li><Link className=\"nav-link\" to=\"#logout\" onClick={() => {\n            logoutHandler()\n            setHamburger(!hamburger)\n          }}>登出</Link></li>\n        </ul>\n      </div>\n    )\n  }\n\n  return (\n    <header>\n      <Link to=\"/\" className=\"navbar-brand\">毛小孩商城</Link>\n      <input\n        type=\"checkbox\"\n        className=\"navbar-toggle\"\n        id=\"navbar-toggle\"\n        checked={hamburger}\n      />\n      <nav className=\"nav\">\n        <ul className=\"nav-list\">\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              onClick={() => setHamburger(!hamburger)}\n              to={{\n                pathname: '/cart',\n                state: {\n                  from: props.location\n                }\n              }}>\n              購物車 <strong>({itemsCount})</strong>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            {currentUser ?\n              <Dropdown /> :\n              <Link\n                className=\"nav-link\"\n                to={{\n                  pathname: '/login',\n                  state: { from: props.location }\n                }}\n                onClick={() => setHamburger(!hamburger)}\n              >會員登入</Link>\n            }\n          </li>\n        </ul>\n      </nav>\n      <label htmlFor=\"navbar-toggle\" className=\"navbar-toggle-label\" onClick={() => setHamburger(!hamburger)}>\n        <span className=\"hamburger\"></span>\n      </label>\n    </header>\n  )\n}\n\nexport default Header","import { apiHelper } from '../apis/helpers'\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n} from '../constants/userConstants'\n\n\nexport const login = (email, password) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: USER_LOGIN_REQUEST })\n    try {\n      const { data } = await apiHelper.post('/api/login', { email, password })\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n      localStorage.setItem('currentUser', JSON.stringify(data))\n    } catch (err) {\n      const message = err.response && err.response.data.message ? err.response.data.message : err.message\n      dispatch({ type: USER_LOGIN_FAIL, payload: message })\n    }\n  }\n}\n\nexport const logout = () => {\n  return (dispatch, getState) => {\n    dispatch({ type: USER_LOGOUT })\n    localStorage.removeItem('currentUser')\n  }\n}\n\nexport const register = (formData) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: USER_REGISTER_REQUEST })\n    try {\n      const { data } = await apiHelper.post('/api/register', formData)\n      dispatch({ type: USER_REGISTER_SUCCESS })\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n      localStorage.setItem('currentUser', JSON.stringify(data))\n    } catch (err) {\n      const message = err.response && err.response.data.message ? err.response.data.message : err.message\n      dispatch({ type: USER_REGISTER_FAIL, payload: message })\n    }\n  }\n}","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Field, reduxForm } from 'redux-form'\n\nimport { register } from '../actions/userActions'\nimport { USER_REGISTER_RESET } from '../constants/userConstants'\nimport Spinner from '../components/Spinner'\nimport Message from '../components/Message'\n\nconst renderInput = ({ input, meta, labelContent, id, type, placeholder, selector }) => {\n  const renderError = ({ touched, error }) => {\n    if (touched && error) {\n      return (\n        <div className=\"invalid-feedback\">\n          {error}\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor={id} className=\"form-label\">{labelContent}</label>\n      <input\n        autoComplete=\"off\"\n        type={type}\n        className={`register-${selector} form-control${meta.error && meta.touched ? ' is-invalid' : ''}`}\n        id={id}\n        placeholder={placeholder}\n        {...input}\n      />\n      {renderError(meta)}\n    </div>\n  )\n}\n\nconst validate = ({ name, email, password, confirmPassword }) => {\n  const errors = {}\n  if (!name) errors.name = '姓名欄位不可空白'\n  if (!email) {\n    errors.email = 'Email欄位不可空白'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n    errors.email = 'Email格式有誤'\n  }\n  if (!password) {\n    errors.password = '密碼欄位不可空白'\n  } else if (password !== confirmPassword) {\n    errors.confirmPassword = '兩次密碼不相符'\n  }\n  return errors\n}\n\nconst RegisterScreen = (props) => {\n  const dispatch = useDispatch()\n  const onSubmit = ({ name, email, phone, password, confirmPassword }) => {\n    dispatch(register({ name, email, phone, password, confirmPassword }))\n  }\n\n  const { loading, success, error } = useSelector(state => state.userRegister)\n  useEffect(() => {\n    if (success) {\n      if (props.location.state && props.location.state.from) {\n        props.history.replace(props.location.state.from)\n      } else {\n        props.history.replace('/')\n      }\n      dispatch({ type: USER_REGISTER_RESET })\n    }\n  }, [success, dispatch, props.history, props.location.state])\n\n  const renderApiError = (err) => {\n    if (typeof err !== 'string') {\n      return err.map((e, i) => (<Message key={i} type=\"danger\">{e}</Message>))\n    }\n    return <Message type=\"danger\">{err}</Message>\n  }\n\n  return (\n    <section id=\"register\">\n      {error && renderApiError(error)}\n      <div className=\"container\">\n        <div className=\"register-wrapper\">\n          {loading && <Spinner />}\n          <form onSubmit={props.handleSubmit(onSubmit)} className=\"register-form\">\n            <h3 className=\"register-title\">註冊</h3>\n            <span className=\"form-hint\">*必填欄位</span>\n            <Field name=\"name\" component={renderInput} labelContent=\"*姓名\" id=\"name\" type=\"text\" placeholder=\"請輸入姓名\" selector=\"name\" />\n            <Field name=\"email\" component={renderInput} labelContent=\"*Email\" id=\"email\" type=\"email\" placeholder=\"請輸入Email\" selector=\"email\" />\n            <Field name=\"phone\" component={renderInput} labelContent=\"聯絡電話\" id=\"phone\" type=\"text\" placeholder=\"請輸入聯絡電話\" selector=\"phone\" />\n            <Field name=\"password\" component={renderInput} labelContent=\"*密碼\" id=\"password\" type=\"password\" placeholder=\"請輸入密碼\" selector=\"password\" />\n            <Field name=\"confirmPassword\" component={renderInput} labelContent=\"*請再輸入一次密碼\" id=\"confirmPassword\" type=\"password\" placeholder=\"請輸入請再輸入一次密碼\" selector=\"confirmPassword\" />\n            <button type=\"submit\" className=\"login-btn default-btn btn\">註冊</button>\n            <div className=\"register-reminder\">\n              <span>已經有帳號?</span>\n              <Link\n                to={{\n                  pathname: '/login',\n                  state: props.location.state ? props.location.state : null\n                }}\n              >登入</Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </section >\n  )\n}\n\nexport default reduxForm({\n  form: 'register',\n  validate\n})(RegisterScreen)","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Field, reduxForm } from 'redux-form'\n\nimport { login } from '../actions/userActions'\nimport Spinner from '../components/Spinner'\nimport Message from '../components/Message'\n\nconst renderInput = ({ input, labelContent, id, type, meta, placeholder, selector }) => {\n  const renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div className=\"invalid-feedback\">\n          {error}\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor={id} className=\"form-label\">{labelContent}</label>\n      <input\n        autoComplete=\"off\"\n        type={type}\n        className={`login-${selector} form-control${meta.error && meta.touched ? ' is-invalid' : ''}`}\n        id={id}\n        placeholder={placeholder}\n        {...input}\n      />\n      {renderError(meta)}\n    </div>\n  )\n}\n\nconst validate = ({ email, password }) => {\n  const errors = {}\n  if (!email) {\n    errors.email = '請填入Email欄位'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n    errors.email = 'Email格式有誤'\n  }\n  if (!password) {\n    errors.password = '請填入密碼欄位'\n  }\n  return errors\n}\n\nconst LoginScreen = (props) => {\n  const { loading, currentUser, error } = useSelector(state => state.userLogin)\n\n  useEffect(() => {\n    if (currentUser) {\n      if (props.location.state && props.location.state.from) {\n        props.history.replace(props.location.state.from)\n      } else {\n        props.history.replace('/')\n      }\n    }\n  }, [currentUser, props.history, props.location])\n\n  const dispatch = useDispatch()\n  const onSubmit = ({ email, password }) => {\n    dispatch(login(email, password))\n  }\n\n  const renderApiError = (err) => {\n    if (typeof err !== 'string') {\n      return err.map((e, i) => (<Message type=\"danger\" key={i}>{e}</Message>))\n    }\n    return <Message type=\"danger\">{err}</Message>\n  }\n\n  return (\n    <section id=\"login\">\n      {error && renderApiError(error)}\n      <div className=\"container\">\n        {loading && <Spinner />}\n        <div className=\"login-wrapper\">\n          <img src=\"https://i.imgur.com/6uM0AVv.jpg\" alt=\"\" className=\"login-img\" />\n          <form onSubmit={props.handleSubmit(onSubmit)} className=\"login-form\">\n            <h3 className=\"login-title\">會員登入</h3>\n            <Field name=\"email\" component={renderInput} labelContent=\"Email\" id=\"email\" type=\"email\" selector=\"email\" placeholder=\"請輸入Email\" />\n            <Field name=\"password\" component={renderInput} labelContent=\"密碼\" id=\"password\" type=\"password\" selector=\"password\" placeholder=\"請輸入密碼\" />\n            <button type=\"submit\" className=\"login-btn default-btn btn\">登入</button>\n            <div className=\"login-reminder\">\n              <span>沒有會員? </span>\n              <Link\n                to={{\n                  pathname: '/register',\n                  state: props.location.state ? props.location.state : null\n                }}\n              >註冊</Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </section >\n  )\n}\n\nexport default reduxForm({\n  form: 'login',\n  validate\n})(LoginScreen)","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_FETCH_REQUEST = 'ORDER_FETCH_REQUEST'\nexport const ORDER_FETCH_SUCCESS = 'ORDER_FETCH_SUCCESS'\nexport const ORDER_FETCH_FAIL = 'ORDER_FETCH_FAIL'\n\nexport const ORDER_DELETE_REQUEST = 'ORDER_DELETE_REQUEST'\nexport const ORDER_DELETE_SUCCESS = 'ORDER_DELETE_SUCCESS'\nexport const ORDER_DELETE_FAIL = 'ORDER_DELETE_FAIL'\nexport const ORDER_DELETE_RESET = 'ORDER_DELETE_RESET'\n","import { apiHelper } from '../apis/helpers'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_FETCH_REQUEST,\n  ORDER_FETCH_SUCCESS,\n  ORDER_FETCH_FAIL,\n  ORDER_DELETE_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_FAIL,\n} from '../constants/orderConstants'\n\nexport const createOrder = (formData) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: ORDER_CREATE_REQUEST })\n    const { userLogin: { currentUser } } = getState()\n    try {\n      const { data } = await apiHelper.post('/api/orders', formData, {\n        headers: {\n          authorization: `Bearer ${currentUser.token}`\n        }\n      })\n      dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\n    } catch (err) {\n      const message = err.response && err.response.data.message ? err.response.data.message : err.message\n      dispatch({ type: ORDER_CREATE_FAIL, payload: message })\n    }\n  }\n}\n\nexport const fetchOrderDetails = (orderId) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: ORDER_DETAILS_REQUEST })\n    const { userLogin: { currentUser } } = getState()\n    try {\n      const { data } = await apiHelper.get(`/api/orders/${orderId}`, {\n        headers: {\n          authorization: `Bearer ${currentUser.token}`\n        }\n      })\n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n    } catch (err) {\n      const message = err.response && err.response.data.message ? err.response.data.message : err.message\n      dispatch({ type: ORDER_DETAILS_FAIL, payload: message })\n    }\n  }\n}\n\nexport const fetchOrders = () => {\n  return async (dispatch, getState) => {\n    dispatch({ type: ORDER_FETCH_REQUEST })\n    const { userLogin: { currentUser } } = getState()\n    try {\n      const { data } = await apiHelper.get('/api/orders', {\n        headers: {\n          authorization: `Bearer ${currentUser.token}`\n        }\n      })\n      dispatch({ type: ORDER_FETCH_SUCCESS, payload: data })\n    } catch (err) {\n      const message = err.response && err.response.data.message ? err.response.data.message : err.message\n      dispatch({ type: ORDER_FETCH_FAIL, payload: message })\n    }\n  }\n}\n\nexport const deleteOrder = (orderId) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: ORDER_DELETE_REQUEST })\n    const { userLogin: { currentUser } } = getState()\n    try {\n      await apiHelper.delete(`/api/orders/${orderId}`, {\n        headers: {\n          authorization: `Bearer ${currentUser.token}`\n        }\n      })\n      dispatch({ type: ORDER_DELETE_SUCCESS })\n    } catch (err) {\n      const message = err.response && err.response.data.message ? err.response.data.message : err.message\n      dispatch({ type: ORDER_DELETE_FAIL, payload: message })\n    }\n  }\n}","import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { createOrder } from '../actions/orderAction'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport Message from '../components/Message'\nimport Spinner from '../components/Spinner'\nimport { CART_ITEMS_RESET } from '../constants/cartConstants'\n\nconst CheckoutScreen = (props) => {\n  console.log('CheckoutScreen render')\n  const [recipient, setRecipient] = useState('')\n  const [phone, setPhone] = useState('')\n  const [address, setAddress] = useState('')\n  const [deliveryMethod, setDeliveryMethod] = useState('')\n  const [paymentMethod, setPaymentMethod] = useState('')\n\n  const [errors, setErrors] = useState({})\n  const [touched, setTouched] = useState({})\n\n  useEffect(() => {\n    if (!recipient && touched.recipient) {\n      setErrors(prevErrors => ({ ...prevErrors, recipient: '請輸入收件人姓名欄位' }))\n    } else {\n      setErrors(prevErrors => ({ ...prevErrors, recipient: null }))\n    }\n  }, [recipient, touched.recipient])\n\n  useEffect(() => {\n    if (!phone && touched.phone) {\n      setErrors(prevErrors => ({ ...prevErrors, phone: '請輸入收件人電話欄位' }))\n    } else {\n      setErrors(prevErrors => ({ ...prevErrors, phone: null }))\n    }\n  }, [phone, touched.phone])\n\n  useEffect(() => {\n    if (!address && touched.address) {\n      setErrors(prevErrors => ({ ...prevErrors, address: '請輸入收件地址欄位' }))\n    } else {\n      setErrors(prevErrors => ({ ...prevErrors, address: null }))\n    }\n  }, [address, touched.address])\n\n  useEffect(() => {\n    if (!deliveryMethod && touched.deliveryMethod) {\n      setErrors(prevErrors => ({ ...prevErrors, deliveryMethod: '請選擇運送方式' }))\n    } else {\n      setErrors(prevErrors => ({ ...prevErrors, deliveryMethod: null }))\n    }\n  }, [deliveryMethod, touched.deliveryMethod])\n\n  useEffect(() => {\n    if (!paymentMethod && touched.paymentMethod) {\n      setErrors(prevErrors => ({ ...prevErrors, paymentMethod: '請選擇付款方式' }))\n    } else {\n      setErrors(prevErrors => ({ ...prevErrors, paymentMethod: null }))\n    }\n  }, [paymentMethod, touched.paymentMethod])\n\n  const dispatch = useDispatch()\n  const onSubmit = (e) => {\n    e.preventDefault()\n    const errors = {}\n    if (!recipient) errors.recipient = '請輸入收件人姓名欄位'\n    if (!phone) errors.phone = '請輸入收件人電話欄位'\n    if (!address) errors.address = '請輸入收件地址欄位'\n    if (!deliveryMethod) errors.deliveryMethod = '請選擇運送方式'\n    if (!paymentMethod) errors.paymentMethod = '請選擇付款方式'\n    if (Object.keys(errors).length) {\n      setErrors(errors)\n    } else {\n      dispatch(createOrder({ recipient, phone, address, deliveryMethod, paymentMethod, cartItems }))\n    }\n  }\n\n  const cartItems = useSelector(state => state.cart.cartItems)\n  const { loading, order, error: apiError } = useSelector(state => state.createOrder)\n\n  useEffect(() => {\n    if (order) {\n      dispatch({ type: ORDER_CREATE_RESET })\n      dispatch({ type: CART_ITEMS_RESET })\n      localStorage.removeItem('cartItems')\n      props.history.push(`/orders/${order.id}`)\n    } else if (apiError && typeof apiError === 'object') {\n      if (Object.keys(apiError).length) {\n        setErrors(apiError)\n      }\n    }\n  }, [apiError, order, dispatch, props.history])\n\n  const renderApiError = () => {\n    if (typeof apiError === 'string') {\n      return <Message type=\"danger\">{apiError}</Message>\n    }\n  }\n  const itemCount = cartItems.reduce((a, c) => a + c.quantity, 0)\n  const subtotal = cartItems.reduce((a, c) => a + c.price * c.quantity, 0)\n\n  return (\n    <div>\n      {loading && <Spinner />}\n      {!cartItems.length ? (<Message type=\"danger\"><Link to=\"/\">請加入商品至購物車</Link></Message>) : (\n        <div className=\"container checkout\">\n          {renderApiError()}\n          <section id=\"cart-items\" className=\"cart-items\">\n            <h4 className=\"cart-section-title\">訂單商品</h4>\n            <div className=\"cart-header checkout\">\n              <span className=\"cart-img\"></span>\n              <span className=\"cart-title\">商品</span>\n              <span className=\"cart-price\">單價</span>\n              <span className=\"cart-counter\">數量</span>\n              <span className=\"cart-subtotal\">總計</span>\n            </div>\n            {\n              cartItems.map(i => (\n                <div key={i.id} className=\"cart-item checkout\">\n                  <img\n                    className=\"cart-item-img\"\n                    src={i.image}\n                    alt={i.name}\n                  />\n                  <span className=\"cart-item-title\">{i.name}</span>\n                  <span className=\"cart-item-price\">${i.price}</span>\n                  <div className=\"cart-item-qty-wrapper\">\n                    <span className=\"cart-item-qty-title\">數量: </span>\n                    <span className=\"cart-item-quantity\">{i.quantity}</span>\n                  </div>\n                  <div className=\"cart-item-subtotal-wrapper\">\n                    <span className=\"cart-item-subtotal-title\">總計: </span>\n                    <span className=\"cart-item-subtotal\">${i.price * i.quantity}</span>\n                  </div>\n                </div>\n              ))\n            }\n            <div className=\"cart-summary-subtotal checkout\">\n              <span>總金額({itemCount}項商品):</span>\n              <span className=\"subtotal-price\">${subtotal}</span>\n            </div>\n          </section>\n\n          <form onSubmit={onSubmit} className=\"checkout-details-form\">\n            <div id=\"delivery-details\" className=\"delivery-details\">\n              <h4 className=\"delivery-section-title\">運送資訊</h4>\n              <div className=\"delivery-details-wrapper\">\n                <span className=\"form-hint\">*必填欄位</span>\n                <div className=\"mb-3\">\n                  <label className=\"form-label\" htmlFor=\"recipient\">*收件人姓名</label>\n                  <input\n                    className={`form-control${errors.recipient ? ' is-invalid' : ''} name`}\n                    type=\"text\"\n                    id=\"recipient\"\n                    placeholder=\"請輸入收件人姓名\"\n                    onChange={(e) => setRecipient(e.target.value)}\n                    onBlur={(e) => setTouched({ ...touched, recipient: true })}\n                    value={recipient}\n                  />\n                  <div className=\"invalid-feedback\">\n                    {errors.recipient}\n                  </div>\n                </div>\n                <div className=\"mb-3\">\n                  <label className=\"form-label\" htmlFor=\"phone\">*收件人電話</label>\n                  <input\n                    className={`form-control${errors.phone ? ' is-invalid' : ''} phone`}\n                    type=\"text\"\n                    id=\"phone\"\n                    placeholder=\"請輸入收件人電話\"\n                    onChange={(e) => setPhone(e.target.value)}\n                    onBlur={(e) => setTouched({ ...touched, phone: true })}\n                    value={phone}\n                  />\n                  <div className=\"invalid-feedback\">\n                    {errors.phone}\n                  </div>\n                </div>\n                <div className=\"mb-3\">\n                  <label className=\"form-label\" htmlFor=\"address\">*收件地址</label>\n                  <textarea\n                    className={`form-control${errors.address ? ' is-invalid' : ''} address`}\n                    type=\"text\"\n                    id=\"address\"\n                    placeholder=\"請輸入收件地址\"\n                    onChange={(e) => setAddress(e.target.value)}\n                    onBlur={(e) => setTouched({ ...touched, address: true })}\n                    value={address}\n                    rows=\"3\"\n                  />\n                  <div className=\"invalid-feedback\">\n                    {errors.address}\n                  </div>\n                </div>\n                <div className=\"delivery-method\">\n                  <span className=\"delivery-method-title\">*運送方式:</span>\n                  <div className=\"form-check\">\n                    <input\n                      className={`form-check-input${errors.deliveryMethod ? ' is-invalid' : ''}`}\n                      type=\"radio\"\n                      name=\"delivery-method\"\n                      id=\"delivery-method1\"\n                      value=\"宅配到府\"\n                      onChange={e => {\n                        setDeliveryMethod(e.target.value)\n                        setTouched({ ...touched, deliveryMethod: true })\n                      }}\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"delivery-method1\">宅配到府</label>\n                  </div>\n                  <div className=\"form-check\">\n                    <input\n                      className={`form-check-input${errors.deliveryMethod ? ' is-invalid' : ''}`}\n                      type=\"radio\"\n                      name=\"delivery-method\"\n                      id=\"delivery-method2\"\n                      value=\"超商取貨\"\n                      onChange={e => {\n                        setDeliveryMethod(e.target.value)\n                        setTouched({ ...touched, deliveryMethod: true })\n                      }}\n                      disabled\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"delivery-method2\">\n                      超商取貨(尚未開放)\n              </label>\n                  </div>\n                  <div className=\"invalid-feedback\" style={{ display: 'block' }}>\n                    {errors.deliveryMethod}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div id=\"payment-details\" className=\"payment-details\">\n              <h4 className=\"payment-section-title\">付款方式</h4>\n              <div className=\"payment-details-wrapper\">\n                <div className=\"payment-method\">\n                  <div className=\"form-check\">\n                    <input\n                      className={`form-check-input${errors.paymentMethod ? ' is-invalid' : ''}`}\n                      type=\"radio\"\n                      name=\"payment-method\"\n                      id=\"payment-method1\"\n                      value=\"信用卡\"\n                      onChange={e => {\n                        setPaymentMethod(e.target.value)\n                        setTouched({ ...touched, paymentMethod: true })\n                      }}\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"payment-method1\">信用卡</label>\n                  </div>\n                  <div className=\"invalid-feedback\" style={{ display: 'block' }}>\n                    {errors.paymentMethod}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn default-btn checkout-btn\">下訂單</button>\n          </form>\n        </div>\n      )\n      }\n    </div >\n  )\n}\n\nexport default CheckoutScreen","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { fetchOrderDetails } from '../actions/orderAction'\nimport Message from '../components/Message'\nimport Spinner from '../components/Spinner'\n\nconst OrderDetailsScreen = (props) => {\n  console.log('OrderDetailsScreen render')\n  const orderId = props.match.params.id\n\n  const { loading, order, error } = useSelector(state => state.orderDetails)\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchOrderDetails(orderId))\n  }, [dispatch, orderId])\n\n  const render = () => {\n    if (loading) return <Spinner />\n    if (error) return <Message type=\"danger\"> {error}</Message >\n    if (order) {\n      const offset = 8 //hrs\n      const local_paid_at = order.orderContent.paid_at ? new Date(Date.parse(order.orderContent.paid_at) + offset * 60 * 60 * 1000).toISOString().slice(0, 19).split('T').join(' ') : null\n\n      const itemCount = order.orderContent.OrderItems.reduce((a, c) => a + c.quantity, 0)\n      const subtotal = order.orderContent.OrderItems.reduce((a, c) => a + c.price * c.quantity, 0)\n\n      return (\n        <div className=\"container order\">\n          <section id=\"order-checkout\" className=\"payment-details order-checkout\">\n            <h4 className=\"payment-section-title\">付款資訊</h4>\n            <div className=\"order-checkout-details-wrapper\">\n              <div className=\"row\">\n                <span className=\"col-4\">付款方式</span>\n                <span className=\"col\">{order.orderContent.payment_method}</span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-4\">付款狀態</span>\n                <span className={`col payment-status ${order.orderContent.payment_status ? 'true' : ''}`}>{order.orderContent.payment_status ? '已付款' : '尚未付款'}</span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-4\">付款時間</span>\n                <span className=\"col\">{local_paid_at ? local_paid_at : '尚未付款'}</span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-4\">商品總計</span>\n                <span className=\"col\">$ {order.orderContent.subtotal}</span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-4\">運費</span>\n                <span className=\"col\">$ {order.orderContent.delivery_fee}</span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-4\">訂單總計</span>\n                <span className=\"col order-total\">$ {order.orderContent.total}</span>\n              </div>\n            </div>\n            {order.tradeInfo && (\n              <div className=\"checkout-pay-form\">\n                <form name=\"Newebpay\" method=\"post\" action={order.tradeInfo.PayGateWay}>\n                  <input type=\"hidden\" name=\"MerchantID\" value={order.tradeInfo.MerchantID} />\n                  <input type=\"hidden\" name=\"TradeInfo\" value={order.tradeInfo.TradeInfo} />\n                  <input type=\"hidden\" name=\"TradeSha\" value={order.tradeInfo.TradeSha} />\n                  <input type=\"hidden\" name=\"Version\" value={order.tradeInfo.Version} />\n                  <button type=\"submit\" className=\"btn default-btn payment-btn\">付款去</button>\n                </form>\n              </div>\n            )}\n          </section>\n          <section id=\"order-items-details\" className=\"cart-items\">\n            <h4 className=\"cart-section-title\">訂單商品</h4>\n            <div className=\"cart-header checkout\">\n              <span className=\"cart-img\"></span>\n              <span className=\"cart-title\">商品</span>\n              <span className=\"cart-price\">單價</span>\n              <span className=\"cart-counter\">數量</span>\n              <span className=\"cart-subtotal\">總計</span>\n            </div>\n            {order.orderContent.OrderItems.map(i => (\n              <div key={i.id} className=\"cart-item checkout\">\n                <img\n                  className=\"cart-item-img\"\n                  src={i.Product.image}\n                  alt={i.Product.name}\n                />\n                <span className=\"cart-item-title\">{i.Product.name}</span>\n                <span className=\"cart-item-price\">${i.price}</span>\n                <div className=\"cart-item-qty-wrapper\">\n                  <span className=\"cart-item-qty-title\">數量: </span>\n                  <span className=\"cart-item-quantity\">{i.quantity}</span>\n                </div>\n                <div className=\"cart-item-subtotal-wrapper\">\n                  <span className=\"cart-item-subtotal-title\">總計: </span>\n                  <span className=\"cart-item-subtotal\">${i.price * i.quantity}</span>\n                </div>\n              </div>))}\n\n            <div className=\"cart-summary-subtotal checkout\">\n              <span>總金額({itemCount}項商品):</span>\n              <span className=\"subtotal-price\">${subtotal}</span>\n            </div>\n\n          </section>\n          <section id=\"order-delivery-details\" className=\"delivery-details\">\n            <h4 className=\"delivery-section-title\">運送資訊</h4>\n            <div className=\"order-delivery-details-wrapper\">\n              <div className=\"row\">\n                <span className=\"col-4\">收件人姓名</span>\n                <span className=\"col\">{order.orderContent.recipient}</span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-4\">收件地址</span>\n                <span className=\"col\">{order.orderContent.address}</span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-4\">收件人電話</span>\n                <span className=\"col\">{order.orderContent.phone}</span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-4\">運送方式</span>\n                <span className=\"col\">{order.orderContent.delivery_method}</span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-4\">運送狀態</span>\n                <span className=\"col\">{order.orderContent.delivery_status ? '已出貨' : '尚未出貨'}</span>\n              </div>\n              <div className=\"row\">\n                <span className=\"col-4\">出貨時間</span>\n                <span className=\"col\">{order.orderContent.delivered_at ? order.orderContent.delivered_at : '尚未出貨'}</span>\n              </div>\n            </div>\n          </section>\n\n\n        </div >\n      )\n    }\n  }\n\n  return (\n    <>\n      {render()}\n    </>\n  )\n}\n\nexport default OrderDetailsScreen","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Swal from 'sweetalert2'\n\nimport { fetchOrders, deleteOrder } from '../actions/orderAction'\nimport { ORDER_DELETE_RESET } from '../constants/orderConstants'\nimport Toast from '../utils/toast'\nimport Spinner from '../components/Spinner'\nimport Message from '../components/Message'\n\nconst OrderListScreen = (props) => {\n  console.log('OrderList render')\n  const { loading, orders, error } = useSelector(state => state.orders)\n  const { loading: deleteOrderLoading, success: deleteOrderSuccess, error: deleteOrderError } = useSelector(state => state.deleteOrder)\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchOrders())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (deleteOrderSuccess) {\n      dispatch({ type: ORDER_DELETE_RESET })\n      dispatch(fetchOrders())\n      Toast.fire({\n        title: '成功取消訂單',\n        icon: 'success'\n      })\n    }\n  }, [dispatch, deleteOrderSuccess])\n\n  const deleteOrderHandler = async (orderId) => {\n    const result = await Swal.fire({\n      title: '確認取消此筆訂單?',\n      showDenyButton: true,\n      showConfirmButton: true,\n      denyButtonText: '返回',\n      confirmButtonText: '確認'\n    })\n    if (result.isConfirmed) {\n      dispatch(deleteOrder(orderId))\n    }\n  }\n\n  const renderOrderList = () => {\n    if (loading || deleteOrderLoading) return <Spinner />\n    if (error || deleteOrderError) return <Message type=\"danger\">{error}</Message>\n    if (orders) {\n      if (!orders.length) return <Message type=\"info\" dismiss={false}>沒有訂單 <Link to=\"/\">去選購</Link></Message>\n      return (\n        <section id=\"order-list\" className=\"order-list\">\n          {orders.map((o, i) => {\n            const offset = 8 //hrs\n            const createdAt = new Date(Date.parse(o.createdAt) + offset * 60 * 60 * 1000).toISOString().slice(0, 19).split('T').join(' ')\n            return (\n              <div key={i} className=\"order-item\">\n                <div className=\"item\">\n                  <span className=\"item-title\">訂單編號</span>\n                  <div className=\"item-value-wrapper\">\n                    <Link\n                      to={{\n                        pathname: `/orders/${o.id}`,\n                        state: { from: props.location }\n                      }}\n                      className=\"item-value\"\n                    >{o.sn}</Link>\n                    <span>(點擊查看明細)</span>\n                  </div>\n                </div>\n\n                <div className=\"item\">\n                  <span className=\"item-title\">成立時間</span>\n                  <div className=\"item-value-wrapper\">\n                    <span className=\"item-value\">{createdAt}</span>\n                  </div>\n                </div>\n\n                <div className=\"item\">\n                  <span className=\"item-title\">付款方式</span>\n                  <div className=\"item-value-wrapper\">\n                    <span className=\"item-value\">{o.payment_method}</span>\n                  </div>\n                </div>\n\n                <div className=\"item\">\n                  <span className=\"item-title\">付款狀態</span>\n                  <div className=\"item-value-wrapper\">\n                    <span className=\"item-value\">{o.payment_status ? '已付款' : '尚未付款'}</span>\n                  </div>\n                </div>\n\n                <div className=\"item\">\n                  <span className=\"item-title\">運送方式</span>\n                  <div className=\"item-value-wrapper\">\n                    <span className=\"item-value\">{o.delivery_method}</span>\n                  </div>\n                </div>\n\n                <div className=\"item\">\n                  <span className=\"item-title\">運送狀態</span>\n                  <div className=\"item-value-wrapper\">\n                    <span className=\"item-value\">{o.delivery_status ? '已出貨' : '尚未出貨'}</span>\n                  </div>\n                </div>\n\n                <div className=\"item\">\n                  <span className=\"item-title\">訂單金額</span>\n                  <div className=\"item-value-wrapper\">\n                    <span className=\"item-value\">${o.total}</span>\n                  </div>\n                </div>\n\n                <div className=\"item\">\n                  <span className=\"item-title\">操作</span>\n                  <div className=\"item-value-wrapper\">\n                    <span className=\"item-value\">{!o.payment_status && (\n                      <button\n                        className=\"btn btn-link\"\n                        onClick={() => { deleteOrderHandler(o.id) }}\n                      > 取消訂單</button>\n                    )}</span>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </section >\n      )\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      {renderOrderList()}\n    </div>\n  )\n}\n\nexport default OrderListScreen\n","import { BrowserRouter, Route } from 'react-router-dom'\n\nimport PrivateRoute from './components/PrivateRoute'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductDetailsScreen from './screens/ProductDetailsScreen'\nimport CartScreen from './screens/CartScreen'\nimport Header from './components/Header'\nimport RegisterScreen from './screens/RegisterScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport CheckoutScreen from './screens/CheckoutScreen'\nimport OrderDetailsScreen from './screens/OrderDetailsScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nexport default function App() {\n  console.log('App render')\n  return (\n    <>\n      <BrowserRouter>\n        <Route path=\"/\" component={Header} />\n        <main>\n          <Route path=\"/\" exact component={HomeScreen} />\n          <Route path=\"/products/:id\" exact component={ProductDetailsScreen} />\n          <Route path=\"/register\" exact component={RegisterScreen} />\n          <Route path=\"/login\" exact component={LoginScreen} />\n          <Route path=\"/cart\" exact component={CartScreen} />\n          <PrivateRoute path=\"/checkout\" exact component={CheckoutScreen} />\n          <PrivateRoute path=\"/orders\" exact component={OrderListScreen} />\n          <PrivateRoute path=\"/orders/:id\" exact component={OrderDetailsScreen} />\n        </main>\n      </BrowserRouter>\n\n      <footer>\n        <p>毛小孩商城 &copy; 2021 </p>\n      </footer>\n\n    </>\n  )\n}","import { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\n\nimport {\n  productsReducer,\n  productDetailsReducer\n} from './productReducers'\n\nimport {\n  cartReducer\n} from './cartReducers'\n\nimport {\n  userLoginReducer,\n  userRegisterReducer\n} from './userReducers'\n\nimport {\n  createOrderReducer,\n  orderDetailsReducer,\n  ordersReducer,\n  deleteOrderReducer,\n} from './orderReducers'\n\nconst reducers = combineReducers({\n  form: formReducer,\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  createOrder: createOrderReducer,\n  orderDetails: orderDetailsReducer,\n  orders: ordersReducer,\n  deleteOrder: deleteOrderReducer,\n})\n\nexport default reducers","import {\n  PRODUCT_FETCH_FAIL,\n  PRODUCT_FETCH_REQUEST,\n  PRODUCT_FETCH_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n} from \"../constants/productConstants\";\n\nexport const productsReducer = (state = { loading: true }, action) => {\n  switch (action.type) {\n    case PRODUCT_FETCH_REQUEST:\n      return { loading: true }\n    case PRODUCT_FETCH_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_FETCH_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (state = { loading: true }, action) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_ACTION_RESET,\n  CART_ITEMS_RESET,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (state = {}, action) => {\n  let cartItems = state.cartItems\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const addedItem = action.payload\n      const isExistInCart = state.cartItems.find(i => i.id === addedItem.id)\n      if (isExistInCart) {\n        cartItems = cartItems.map(i => i.id === addedItem.id ? addedItem : i)\n        return { ...state, cartItems, actionSuccess: true }\n      } else {\n        cartItems = [...cartItems, addedItem]\n        return { ...state, cartItems, actionSuccess: true }\n      }\n    case CART_REMOVE_ITEM:\n      const deletedItemId = action.payload\n      cartItems = cartItems.filter(i => i.id !== deletedItemId)\n      return { ...state, cartItems, actionSuccess: true }\n    case CART_ACTION_RESET:\n      return { ...state, actionSuccess: false }\n    case CART_ITEMS_RESET:\n      return { ...state, cartItems: [] }\n    default:\n      return state\n  }\n}","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, currentUser: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, success: true }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_REGISTER_RESET:\n      return {}\n    default:\n      return state\n  }\n}","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_RESET,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_FETCH_REQUEST,\n  ORDER_FETCH_SUCCESS,\n  ORDER_FETCH_FAIL,\n  ORDER_DELETE_REQUEST,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_FAIL,\n  ORDER_DELETE_RESET,\n} from '../constants/orderConstants'\n\nexport const createOrderReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return { loading: true }\n    case ORDER_CREATE_SUCCESS:\n      return { loading: false, order: action.payload }\n    case ORDER_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return { loading: true }\n    case ORDER_DETAILS_SUCCESS:\n      return { loading: false, order: action.payload }\n    case ORDER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const ordersReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_FETCH_REQUEST:\n      return { loading: true }\n    case ORDER_FETCH_SUCCESS:\n      return { loading: false, orders: action.payload }\n    case ORDER_FETCH_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const deleteOrderReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELETE_REQUEST:\n      return { loading: true }\n    case ORDER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case ORDER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    case ORDER_DELETE_RESET:\n      return {}\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducers from './reducers/index'\n\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n  },\n  userLogin: {\n    currentUser: localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null,\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(thunk)))\n\nexport default store","import ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport './index.css'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.querySelector('#root'))"],"sourceRoot":""}